<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.CognitiveServices.ContentModerator</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.CognitiveServices.ContentModerator.ApiKeyServiceClientCredentials">
            <summary>
            Allows authentication to the API using a basic apiKey mechanism
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.ContentModerator.ApiKeyServiceClientCredentials.#ctor(System.String)">
            <summary>
            Creates a new instance of the ApiKeyServiceClientCredentails class
            </summary>
            <param name="subscriptionKey">The subscription key to authenticate and authorize as</param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.ContentModerator.ApiKeyServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Add the Basic Authentication Header to each outgoing request
            </summary>
            <param name="request">The outgoing request</param>
            <param name="cancellationToken">A token to cancel the operation</param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient">
             <summary>
             You use the API to scan your content as it is generated. Content
             Moderator then processes your content and sends the results along with
             relevant information either back to your systems or to the built-in
             review tool. You can use this information to take decisions e.g. take
             it down, send to human judge, etc.
            
             When using the API, images need to have a minimum of 128 pixels and a
             maximum file size of 4MB.
             Text can be at most 1024 characters long.
             If the content passed to the text API or the image API exceeds the size
             limits, the API will return an error code that informs about the issue.
             </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.Endpoint">
            <summary>
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://westus.api.cognitive.microsoft.com).
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.Credentials">
            <summary>
            Subscription credentials which uniquely identify client subscription.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.ImageModeration">
            <summary>
            Gets the IImageModeration.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.TextModeration">
            <summary>
            Gets the ITextModeration.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.ListManagementImageLists">
            <summary>
            Gets the IListManagementImageLists.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.ListManagementTermLists">
            <summary>
            Gets the IListManagementTermLists.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.ListManagementImage">
            <summary>
            Gets the IListManagementImage.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.ListManagementTerm">
            <summary>
            Gets the IListManagementTerm.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.Reviews">
            <summary>
            Gets the IReviews.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ContentModeratorClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ContentModeratorClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ContentModeratorClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ContentModeratorClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ContentModeratorClient class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ContentModeratorClient class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ContentModeratorClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ContentModeratorClient class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient">
             <summary>
             You use the API to scan your content as it is generated. Content
             Moderator then processes your content and sends the results along with
             relevant information either back to your systems or to the built-in
             review tool. You can use this information to take decisions e.g. take
             it down, send to human judge, etc.
            
             When using the API, images need to have a minimum of 128 pixels and a
             maximum file size of 4MB.
             Text can be at most 1024 characters long.
             If the content passed to the text API or the image API exceeds the size
             limits, the API will return an error code that informs about the issue.
             </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.SerializationSettings">
            <summary>
            The base URI of the service.
            </summary>
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.Endpoint">
            <summary>
            Supported Cognitive Services endpoints (protocol and hostname, for
            example: https://westus.api.cognitive.microsoft.com).
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.Credentials">
            <summary>
            Subscription credentials which uniquely identify client
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.ImageModeration">
            <summary>
            Gets the IImageModeration.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.TextModeration">
            <summary>
            Gets the ITextModeration.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.ListManagementImageLists">
            <summary>
            Gets the IListManagementImageLists.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.ListManagementTermLists">
            <summary>
            Gets the IListManagementTermLists.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.ListManagementImage">
            <summary>
            Gets the IListManagementImage.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.ListManagementTerm">
            <summary>
            Gets the IListManagementTerm.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.IContentModeratorClient.Reviews">
            <summary>
            Gets the IReviews.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IImageModeration">
            <summary>
            ImageModeration operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.FindFacesWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to
            false if omitted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.OCRMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If
             no language is specified in input then the detection defaults to
             English.
             </summary>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to
             false if omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to
             come with additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.EvaluateMethodWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult
            content.
            </summary>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to
            false if omitted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.MatchMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You
             can create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List
             before additions and removals are reflected in the response.
             </summary>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to
             false if omitted.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.FindFacesFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to
            false if omitted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.FindFacesUrlInputWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to
            false if omitted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.OCRUrlInputWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If
             no language is specified in input then the detection defaults to
             English.
             </summary>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to
             false if omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to
             come with additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.OCRFileInputWithHttpMessagesAsync(System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If
             no language is specified in input then the detection defaults to
             English.
             </summary>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to
             false if omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to
             come with additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.EvaluateFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult
            content.
            </summary>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to
            false if omitted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.EvaluateUrlInputWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult
            content.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to
            false if omitted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.MatchUrlInputWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You
             can create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List
             before additions and removals are reflected in the response.
             </summary>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to
             false if omitted.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IImageModeration.MatchFileInputWithHttpMessagesAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You
             can create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List
             before additions and removals are reflected in the response.
             </summary>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to
             false if omitted.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IListManagementImage">
            <summary>
            ListManagementImage operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImage.AddImageWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImage.DeleteAllImagesWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes all images from the list with list Id equal to list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImage.GetAllImageIdsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all image Ids from the list with list Id equal to list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImage.DeleteImageWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an image from the list with list Id and image Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageId'>
            Id of the image.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImage.AddImageUrlInputWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImage.AddImageFileInputWithHttpMessagesAsync(System.String,System.IO.Stream,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists">
            <summary>
            ListManagementImageLists operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists.GetDetailsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the details of the image list with list Id equal to list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes image list with the list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates an image list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists.CreateWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates an image list.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists.GetAllImageListsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the Image Lists.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists.RefreshIndexMethodWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Refreshes the index of the list with list Id equal to list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IListManagementTerm">
            <summary>
            ListManagementTerm operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTerm.AddTermWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a term to the term list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTerm.DeleteTermWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a term from the list with list Id equal to the list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTerm.GetAllTermsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all terms from the list with list Id equal to the list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='offset'>
            The pagination start index.
            </param>
            <param name='limit'>
            The max limit.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTerm.DeleteAllTermsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes all terms from the list with list Id equal to the list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists">
            <summary>
            ListManagementTermLists operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists.GetDetailsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns list Id details of the term list with list Id equal to list
            Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes term list with the list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates an Term List.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists.CreateWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a Term List
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists.GetAllTermListsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            gets all the Term Lists
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists.RefreshIndexMethodWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Refreshes the index of the list with list Id equal to list ID
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ImageModeration">
            <summary>
            ImageModeration operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the ImageModeration class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ImageModeration.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.FindFacesWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.OCRMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.EvaluateMethodWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.MatchMethodWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.FindFacesFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.FindFacesUrlInputWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.OCRUrlInputWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.OCRFileInputWithHttpMessagesAsync(System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.EvaluateFileInputWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.EvaluateUrlInputWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.MatchUrlInputWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModeration.MatchFileInputWithHttpMessagesAsync(System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions">
            <summary>
            Extension methods for ImageModeration.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.FindFaces(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.Nullable{System.Boolean})">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.FindFacesAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.OCRMethod(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.OCRMethodAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.EvaluateMethod(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.Nullable{System.Boolean})">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.EvaluateMethodAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.MatchMethod(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.Nullable{System.Boolean})">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.MatchMethodAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.FindFacesFileInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.IO.Stream,System.Nullable{System.Boolean})">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.FindFacesFileInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.FindFacesUrlInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean})">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.FindFacesUrlInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Returns the list of faces found.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.OCRUrlInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.OCRUrlInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.OCRFileInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.OCRFileInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             Returns any text found in the image for the language specified. If no
             language is specified in input then the detection defaults to English.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='language'>
             Language of the terms.
             </param>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='enhanced'>
             When set to True, the image goes through additional processing to come with
             additional candidates.
            
             image/tiff is not supported when enhanced is set to true
            
             Note: This impacts the response time.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.EvaluateFileInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.IO.Stream,System.Nullable{System.Boolean})">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.EvaluateFileInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.EvaluateUrlInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean})">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.EvaluateUrlInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Returns probabilities of the image containing racy or adult content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='cacheImage'>
            Whether to retain the submitted image for future use; defaults to false if
            omitted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.MatchUrlInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.String,System.Nullable{System.Boolean})">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.MatchUrlInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='imageUrl'>
             The image url.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.MatchFileInput(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.IO.Stream,System.String,System.Nullable{System.Boolean})">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ImageModerationExtensions.MatchFileInputAsync(Microsoft.CognitiveServices.ContentModerator.IImageModeration,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             Fuzzily match an image against one of your custom Image Lists. You can
             create and manage your custom image lists using &lt;a
             href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe"&gt;this&lt;/a&gt;
             API.
            
             Returns ID and tags of matching image.&lt;br/&gt;
             &lt;br/&gt;
             Note: Refresh Index must be run on the corresponding Image List before
             additions and removals are reflected in the response.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='imageStream'>
             The image file.
             </param>
             <param name='listId'>
             The list Id.
             </param>
             <param name='cacheImage'>
             Whether to retain the submitted image for future use; defaults to false if
             omitted.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.IReviews">
            <summary>
            Reviews operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.GetReviewWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns review details for the review Id passed.
            </summary>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.GetJobDetailsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the Job Details for a Job Id.
            </summary>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='jobId'>
            Id of the job.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.CreateReviewsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As
             Reviewers complete reviewing, results of the Review would be POSTED
             (i.e. HTTP POST) on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified
             input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='urlContentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createReviewBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.CreateJobWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Content,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             A job Id will be returned for the content posted on this endpoint.
            
             Once the content is evaluated against the Workflow provided the
             review will be created or ignored based on the workflow expression.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
            
             &lt;p&gt;
             &lt;h4&gt;Job Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {&lt;br/&gt;
             "JobId": "&lt;Job Id&gt;,&lt;br/&gt;
             "ReviewId": "&lt;Review Id, if the Job resulted in a Review to be
             created&gt;",&lt;br/&gt;
             "WorkFlowId": "default",&lt;br/&gt;
             "Status": "&lt;This will be one of Complete, InProgress,
             Error&gt;",&lt;br/&gt;
             "ContentType": "Image",&lt;br/&gt;
             "ContentId": "&lt;This is the ContentId that was specified on
             input&gt;",&lt;br/&gt;
             "CallBackType": "Job",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;
             &lt;p&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified
             input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='contentType'>
             Image, Text or Video. Possible values include: 'Image', 'Text',
             'Video'
             </param>
             <param name='contentId'>
             Id/Name to identify the content submitted.
             </param>
             <param name='workflowName'>
             Workflow Name that you want to invoke.
             </param>
             <param name='jobContentType'>
             The content type. Possible values include: 'application/json',
             'image/jpeg'
             </param>
             <param name='content'>
             Content to evaluate.
             </param>
             <param name='callBackEndpoint'>
             Callback endpoint for posting the create job result.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.AddVideoFrameWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As
             Reviewers complete reviewing, results of the Review would be POSTED
             (i.e. HTTP POST) on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified
             input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='timescale'>
             Timescale of the video you are adding frames to.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.GetVideoFramesWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As
             Reviewers complete reviewing, results of the Review would be POSTED
             (i.e. HTTP POST) on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified
             input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='startSeed'>
             Time stamp of the frame from where you want to start fetching the
             frames.
             </param>
             <param name='noOfRecords'>
             Number of frames to fetch.
             </param>
             <param name='filter'>
             Get frames filtered by tags.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.PublishVideoReviewWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Publish video review to make it available for review.
            </summary>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.AddVideoTranscriptModerationResultWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This API adds a transcript screen text result file for a video
            review. Transcript screen text result file is a result of Screen
            Text API . In order to generate transcript screen text result file
            , a transcript file has to be screened for profanity using Screen
            Text API.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='transcriptModerationBody'>
            Body for add video transcript moderation result API
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.AddVideoTranscriptWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This API adds a transcript file (text version of all the words
            spoken in a video) to a video review. The file should be a valid
            WebVTT format.
            </summary>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='vTTfile'>
            Transcript file of the video.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.CreateVideoReviewsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As
             Reviewers complete reviewing, results of the Review would be POSTED
             (i.e. HTTP POST) on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified
             input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='contentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createVideoReviewsBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.AddVideoFrameUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Use this method to add frames for a video review.Timescale: This
            parameter is a factor which is used to convert the timestamp on a
            frame into milliseconds. Timescale is provided in the output of the
            Content Moderator video media processor on the Azure Media Services
            platform.Timescale in the Video Moderation output is Ticks/Second.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='videoFrameBody'>
            Body for add video frames API
            </param>
            <param name='timescale'>
            Timescale of the video.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.IReviews.AddVideoFrameStreamWithHttpMessagesAsync(System.String,System.String,System.String,System.IO.Stream,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Use this method to add frames for a video review.Timescale: This
            parameter is a factor which is used to convert the timestamp on a
            frame into milliseconds. Timescale is provided in the output of the
            Content Moderator video media processor on the Azure Media Services
            platform.Timescale in the Video Moderation output is Ticks/Second.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='frameImageZip'>
            Zip file containing frame images.
            </param>
            <param name='frameMetadata'>
            Metadata of the frame.
            </param>
            <param name='timescale'>
            Timescale of the video .
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ITextModeration">
            <summary>
            TextModeration operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ITextModeration.ScreenTextWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Detect profanity and match against custom and shared blacklists
            </summary>
            <remarks>
            Detects profanity in more than 100 languages and match against
            custom and shared blacklists.
            </remarks>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain',
            'text/html', 'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='language'>
            Language of the text.
            </param>
            <param name='autocorrect'>
            Autocorrect text.
            </param>
            <param name='pII'>
            Detect personal identifiable information.
            </param>
            <param name='listId'>
            The list Id.
            </param>
            <param name='classify'>
            Classify input.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ITextModeration.DetectLanguageWithHttpMessagesAsync(System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This operation will detect the language of given input content.
            Returns the &lt;a
            href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3
            code&lt;/a&gt; for the predominant language comprising the
            submitted text. Over 110 languages supported.
            </summary>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain',
            'text/html', 'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementImage">
            <summary>
            ListManagementImage operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the ListManagementImage class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.AddImageWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.DeleteAllImagesWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes all images from the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.GetAllImageIdsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all image Ids from the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.DeleteImageWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an image from the list with list Id and image Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageId'>
            Id of the image.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.AddImageUrlInputWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImage.AddImageFileInputWithHttpMessagesAsync(System.String,System.IO.Stream,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions">
            <summary>
            Extension methods for ListManagementImage.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.AddImage(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.AddImageAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.DeleteAllImages(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String)">
            <summary>
            Deletes all images from the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.DeleteAllImagesAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes all images from the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.GetAllImageIds(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String)">
            <summary>
            Gets all image Ids from the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.GetAllImageIdsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all image Ids from the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.DeleteImage(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.String)">
            <summary>
            Deletes an image from the list with list Id and image Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageId'>
            Id of the image.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.DeleteImageAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an image from the list with list Id and image Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageId'>
            Id of the image.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.AddImageUrlInput(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Int32},System.String)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.AddImageUrlInputAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.BodyModel,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='imageUrl'>
            The image url.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.AddImageFileInput(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.IO.Stream,System.Nullable{System.Int32},System.String)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageExtensions.AddImageFileInputAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImage,System.String,System.IO.Stream,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Add an image to the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='imageStream'>
            The image file.
            </param>
            <param name='tag'>
            Tag for the image.
            </param>
            <param name='label'>
            The image label.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists">
            <summary>
            ListManagementImageLists operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the ListManagementImageLists class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.GetDetailsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the details of the image list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes image list with the list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates an image list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.CreateWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates an image list.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.GetAllImageListsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the Image Lists.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageLists.RefreshIndexMethodWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Refreshes the index of the list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions">
            <summary>
            Extension methods for ListManagementImageLists.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.GetDetails(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String)">
            <summary>
            Returns the details of the image list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.GetDetailsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the details of the image list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.Delete(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String)">
            <summary>
            Deletes image list with the list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.DeleteAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes image list with the list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.Update(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body)">
            <summary>
            Updates an image list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.UpdateAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Threading.CancellationToken)">
            <summary>
            Updates an image list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.Create(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body)">
            <summary>
            Creates an image list.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.CreateAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Threading.CancellationToken)">
            <summary>
            Creates an image list.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.GetAllImageLists(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists)">
            <summary>
            Gets all the Image Lists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.GetAllImageListsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.Threading.CancellationToken)">
            <summary>
            Gets all the Image Lists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.RefreshIndexMethod(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String)">
            <summary>
            Refreshes the index of the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementImageListsExtensions.RefreshIndexMethodAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementImageLists,System.String,System.Threading.CancellationToken)">
            <summary>
            Refreshes the index of the list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm">
            <summary>
            ListManagementTerm operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the ListManagementTerm class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm.AddTermWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a term to the term list with list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm.DeleteTermWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a term from the list with list Id equal to the list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm.GetAllTermsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all terms from the list with list Id equal to the list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='offset'>
            The pagination start index.
            </param>
            <param name='limit'>
            The max limit.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTerm.DeleteAllTermsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes all terms from the list with list Id equal to the list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions">
            <summary>
            Extension methods for ListManagementTerm.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.AddTerm(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.String)">
            <summary>
            Add a term to the term list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.AddTermAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a term to the term list with list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.DeleteTerm(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.String)">
            <summary>
            Deletes a term from the list with list Id equal to the list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.DeleteTermAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a term from the list with list Id equal to the list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='term'>
            Term to be deleted
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.GetAllTerms(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets all terms from the list with list Id equal to the list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='offset'>
            The pagination start index.
            </param>
            <param name='limit'>
            The max limit.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.GetAllTermsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all terms from the list with list Id equal to the list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='offset'>
            The pagination start index.
            </param>
            <param name='limit'>
            The max limit.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.DeleteAllTerms(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String)">
            <summary>
            Deletes all terms from the list with list Id equal to the list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermExtensions.DeleteAllTermsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTerm,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes all terms from the list with list Id equal to the list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists">
            <summary>
            ListManagementTermLists operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the ListManagementTermLists class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.GetDetailsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns list Id details of the term list with list Id equal to list Id
            passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes term list with the list Id equal to list Id passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates an Term List.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.CreateWithHttpMessagesAsync(System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a Term List
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.GetAllTermListsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            gets all the Term Lists
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermLists.RefreshIndexMethodWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Refreshes the index of the list with list Id equal to list ID passed.
            </summary>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions">
            <summary>
            Extension methods for ListManagementTermLists.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.GetDetails(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String)">
            <summary>
            Returns list Id details of the term list with list Id equal to list Id
            passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.GetDetailsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns list Id details of the term list with list Id equal to list Id
            passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.Delete(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String)">
            <summary>
            Deletes term list with the list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.DeleteAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes term list with the list Id equal to list Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.Update(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body)">
            <summary>
            Updates an Term List.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.UpdateAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Threading.CancellationToken)">
            <summary>
            Updates an Term List.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.Create(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body)">
            <summary>
            Creates a Term List
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.CreateAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Body,System.Threading.CancellationToken)">
            <summary>
            Creates a Term List
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='body'>
            Schema of the body.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.GetAllTermLists(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists)">
            <summary>
            gets all the Term Lists
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.GetAllTermListsAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.Threading.CancellationToken)">
            <summary>
            gets all the Term Lists
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.RefreshIndexMethod(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,System.String)">
            <summary>
            Refreshes the index of the list with list Id equal to list ID passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ListManagementTermListsExtensions.RefreshIndexMethodAsync(Microsoft.CognitiveServices.ContentModerator.IListManagementTermLists,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Refreshes the index of the list with list Id equal to list ID passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='listId'>
            List Id of the image list.
            </param>
            <param name='language'>
            Language of the terms.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Address">
            <summary>
            Address details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Address.#ctor">
            <summary>
            Initializes a new instance of the Address class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Address.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the Address class.
            </summary>
            <param name="text">Detected Address.</param>
            <param name="index">Index(Location) of the Address in the input
            text content.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Address.Text">
            <summary>
            Gets or sets detected Address.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Address.Index">
            <summary>
            Gets or sets index(Location) of the Address in the input text
            content.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.APIError">
            <summary>
            Error information returned by the API
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.APIError.#ctor">
            <summary>
            Initializes a new instance of the APIError class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.APIError.#ctor(Microsoft.CognitiveServices.ContentModerator.Models.Error)">
            <summary>
            Initializes a new instance of the APIError class.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.APIError.Error">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            <summary>
            Exception thrown for an invalid response with APIError information.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException.#ctor">
            <summary>
            Initializes a new instance of the APIErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the APIErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the APIErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Body.#ctor">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Body.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Body class.
            </summary>
            <param name="name">Name of the list.</param>
            <param name="description">Description of the list.</param>
            <param name="metadata">Metadata of the list.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Body.Name">
            <summary>
            Gets or sets name of the list.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Body.Description">
            <summary>
            Gets or sets description of the list.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Body.Metadata">
            <summary>
            Gets or sets metadata of the list.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.BodyModel.#ctor">
            <summary>
            Initializes a new instance of the BodyModel class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.BodyModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the BodyModel class.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.BodyModel.DataRepresentation">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.BodyModel.Value">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Candidate">
            <summary>
            OCR candidate text.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Candidate.#ctor">
            <summary>
            Initializes a new instance of the Candidate class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Candidate.#ctor(System.String,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the Candidate class.
            </summary>
            <param name="text">The text found.</param>
            <param name="confidence">The confidence level.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Candidate.Text">
            <summary>
            Gets or sets the text found.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Candidate.Confidence">
            <summary>
            Gets or sets the confidence level.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Classification">
            <summary>
            The classification details of the text.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Classification.#ctor">
            <summary>
            Initializes a new instance of the Classification class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Classification.#ctor(Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory1,Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory2,Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory3,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the Classification class.
            </summary>
            <param name="category1">The category1 score details of the text.
            &lt;a href="https://aka.ms/textClassifyCategories"&gt;Click
            here&lt;/a&gt; for more details on category classification.</param>
            <param name="category2">The category2 score details of the text.
            &lt;a href="https://aka.ms/textClassifyCategories"&gt;Click
            here&lt;/a&gt; for more details on category classification.</param>
            <param name="category3">The category3 score details of the text.
            &lt;a href="https://aka.ms/textClassifyCategories"&gt;Click
            here&lt;/a&gt; for more details on category classification.</param>
            <param name="reviewRecommended">The review recommended
            flag.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Classification.Category1">
            <summary>
            Gets or sets the category1 score details of the text. &amp;lt;a
            href="https://aka.ms/textClassifyCategories"&amp;gt;Click
            here&amp;lt;/a&amp;gt; for more details on category classification.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Classification.Category2">
            <summary>
            Gets or sets the category2 score details of the text. &amp;lt;a
            href="https://aka.ms/textClassifyCategories"&amp;gt;Click
            here&amp;lt;/a&amp;gt; for more details on category classification.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Classification.Category3">
            <summary>
            Gets or sets the category3 score details of the text. &amp;lt;a
            href="https://aka.ms/textClassifyCategories"&amp;gt;Click
            here&amp;lt;/a&amp;gt; for more details on category classification.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Classification.ReviewRecommended">
            <summary>
            Gets or sets the review recommended flag.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory1">
            <summary>
            The category1 score details of the text. &lt;a
            href="https://aka.ms/textClassifyCategories"&gt;Click here&lt;/a&gt;
            for more details on category classification.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory1.#ctor">
            <summary>
            Initializes a new instance of the ClassificationCategory1 class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory1.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the ClassificationCategory1 class.
            </summary>
            <param name="score">The category1 score.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory1.Score">
            <summary>
            Gets or sets the category1 score.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory2">
            <summary>
            The category2 score details of the text. &lt;a
            href="https://aka.ms/textClassifyCategories"&gt;Click here&lt;/a&gt;
            for more details on category classification.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory2.#ctor">
            <summary>
            Initializes a new instance of the ClassificationCategory2 class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory2.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the ClassificationCategory2 class.
            </summary>
            <param name="score">The category2 score.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory2.Score">
            <summary>
            Gets or sets the category2 score.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory3">
            <summary>
            The category3 score details of the text. &lt;a
            href="https://aka.ms/textClassifyCategories"&gt;Click here&lt;/a&gt;
            for more details on category classification.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory3.#ctor">
            <summary>
            Initializes a new instance of the ClassificationCategory3 class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory3.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the ClassificationCategory3 class.
            </summary>
            <param name="score">The category3 score.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ClassificationCategory3.Score">
            <summary>
            Gets or sets the category3 score.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Content.#ctor">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Content.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Content class.
            </summary>
            <param name="contentValue">Content to evaluate for a job.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Content.ContentValue">
            <summary>
            Gets or sets content to evaluate for a job.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Content.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem">
            <summary>
            Schema items of the body.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.#ctor">
            <summary>
            Initializes a new instance of the CreateReviewBodyItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItemMetadataItem})">
            <summary>
            Initializes a new instance of the CreateReviewBodyItem class.
            </summary>
            <param name="type">Type of the content. Possible values include:
            'Image', 'Text'</param>
            <param name="content">Content to review.</param>
            <param name="contentId">Content Identifier.</param>
            <param name="callbackEndpoint">Optional CallbackEndpoint.</param>
            <param name="metadata">Optional metadata details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.Type">
            <summary>
            Gets or sets type of the content. Possible values include: 'Image',
            'Text'
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.Content">
            <summary>
            Gets or sets content to review.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.ContentId">
            <summary>
            Gets or sets content Identifier.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.CallbackEndpoint">
            <summary>
            Gets or sets optional CallbackEndpoint.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.Metadata">
            <summary>
            Gets or sets optional metadata details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItemMetadataItem.#ctor">
            <summary>
            Initializes a new instance of the CreateReviewBodyItemMetadataItem
            class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItemMetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CreateReviewBodyItemMetadataItem
            class.
            </summary>
            <param name="key">Your key parameter.</param>
            <param name="value">Your value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItemMetadataItem.Key">
            <summary>
            Gets or sets your key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItemMetadataItem.Value">
            <summary>
            Gets or sets your value parameter.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItemMetadataItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem">
            <summary>
            Schema items of the body.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.#ctor">
            <summary>
            Initializes a new instance of the CreateVideoReviewsBodyItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemMetadataItem},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the CreateVideoReviewsBodyItem class.
            </summary>
            <param name="content">Video content url to review.</param>
            <param name="contentId">Content Identifier.</param>
            <param name="status">Status of the
            video(Complete,Unpublished,Pending). Possible values include:
            'Complete', 'Unpublished', 'Pending'</param>
            <param name="videoFrames">Optional metadata details.</param>
            <param name="metadata">Optional metadata details.</param>
            <param name="timescale">Timescale of the video.</param>
            <param name="callbackEndpoint">Optional CallbackEndpoint.</param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.#cctor">
            <summary>
            Static constructor for CreateVideoReviewsBodyItem class.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.VideoFrames">
            <summary>
            Gets or sets optional metadata details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.Metadata">
            <summary>
            Gets or sets optional metadata details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.Content">
            <summary>
            Gets or sets video content url to review.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.ContentId">
            <summary>
            Gets or sets content Identifier.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.Status">
            <summary>
            Gets or sets status of the video(Complete,Unpublished,Pending).
            Possible values include: 'Complete', 'Unpublished', 'Pending'
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.Timescale">
            <summary>
            Gets or sets timescale of the video.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.CallbackEndpoint">
            <summary>
            Gets or sets optional CallbackEndpoint.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.Type">
            <summary>
            Type of the content.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemMetadataItem.#ctor">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemMetadataItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemMetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemMetadataItem class.
            </summary>
            <param name="key">Your key parameter.</param>
            <param name="value">Your value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemMetadataItem.Key">
            <summary>
            Gets or sets your key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemMetadataItem.Value">
            <summary>
            Gets or sets your value parameter.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemMetadataItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.#ctor">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemVideoFramesItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemMetadataItem})">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemVideoFramesItem class.
            </summary>
            <param name="id">Id of the frame.</param>
            <param name="timestamp">Timestamp of the frame.</param>
            <param name="frameImage">Frame image Url.</param>
            <param name="metadata">Optional metadata details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.Id">
            <summary>
            Gets or sets id of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.Timestamp">
            <summary>
            Gets or sets timestamp of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.FrameImage">
            <summary>
            Gets or sets frame image Url.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.ReviewerResultTags">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.Metadata">
            <summary>
            Gets or sets optional metadata details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.#ctor">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemVideoFramesItemMetadataItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemVideoFramesItemMetadataItem class.
            </summary>
            <param name="key">Your key parameter.</param>
            <param name="value">Your value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.Key">
            <summary>
            Gets or sets your key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.Value">
            <summary>
            Gets or sets your value parameter.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.#ctor">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem
            class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem
            class.
            </summary>
            <param name="key">Your key parameter.</param>
            <param name="value">Your value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.Key">
            <summary>
            Gets or sets your key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.Value">
            <summary>
            Gets or sets your value parameter.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.DetectedLanguage">
            <summary>
            Detect language result.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.DetectedLanguage.#ctor">
            <summary>
            Initializes a new instance of the DetectedLanguage class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.DetectedLanguage.#ctor(System.String,Microsoft.CognitiveServices.ContentModerator.Models.Status,System.String)">
            <summary>
            Initializes a new instance of the DetectedLanguage class.
            </summary>
            <param name="detectedLanguageProperty">The detected
            language.</param>
            <param name="status">The detect language status</param>
            <param name="trackingId">The tracking id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedLanguage.DetectedLanguageProperty">
            <summary>
            Gets or sets the detected language.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedLanguage.Status">
            <summary>
            Gets or sets the detect language status
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedLanguage.TrackingId">
            <summary>
            Gets or sets the tracking id.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms">
            <summary>
            Detected Terms details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms.#ctor">
            <summary>
            Initializes a new instance of the DetectedTerms class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the DetectedTerms class.
            </summary>
            <param name="index">Index(Location) of the detected profanity term
            in the input text content.</param>
            <param name="originalIndex">Original Index(Location) of the
            detected profanity term in the input text content.</param>
            <param name="listId">Matched Terms list Id.</param>
            <param name="term">Detected profanity term.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms.Index">
            <summary>
            Gets or sets index(Location) of the detected profanity term in the
            input text content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms.OriginalIndex">
            <summary>
            Gets or sets original Index(Location) of the detected profanity
            term in the input text content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms.ListId">
            <summary>
            Gets or sets matched Terms list Id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms.Term">
            <summary>
            Gets or sets detected profanity term.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Email">
            <summary>
            Email Address details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Email.#ctor">
            <summary>
            Initializes a new instance of the Email class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Email.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the Email class.
            </summary>
            <param name="detected">Detected Email Address from the input text
            content.</param>
            <param name="subType">Subtype of the detected Email
            Address.</param>
            <param name="text">Email Address in the input text content.</param>
            <param name="index">Index(Location) of the Email address in the
            input text content.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Email.Detected">
            <summary>
            Gets or sets detected Email Address from the input text content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Email.SubType">
            <summary>
            Gets or sets subtype of the detected Email Address.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Email.Text">
            <summary>
            Gets or sets email Address in the input text content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Email.Index">
            <summary>
            Gets or sets index(Location) of the Email address in the input text
            content.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Error">
            <summary>
            Error body.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Error.#ctor">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Error.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Error.Code">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Error.Message">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate">
            <summary>
            Evaluate response object.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.#ctor">
            <summary>
            Initializes a new instance of the Evaluate class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.#ctor(System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Double},System.Nullable{System.Boolean},System.Nullable{System.Double},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},Microsoft.CognitiveServices.ContentModerator.Models.Status)">
            <summary>
            Initializes a new instance of the Evaluate class.
            </summary>
            <param name="cacheID">The cache id.</param>
            <param name="result">Evaluate result.</param>
            <param name="trackingId">The tracking id.</param>
            <param name="adultClassificationScore">The adult classification
            score.</param>
            <param name="isImageAdultClassified">Indicates if an image is
            classified as adult.</param>
            <param name="racyClassificationScore">The racy classication
            score.</param>
            <param name="isImageRacyClassified">Indicates if the image is
            classified as racy.</param>
            <param name="advancedInfo">The advanced info.</param>
            <param name="status">The evaluate status</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.CacheID">
            <summary>
            Gets or sets the cache id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.Result">
            <summary>
            Gets or sets evaluate result.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.TrackingId">
            <summary>
            Gets or sets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.AdultClassificationScore">
            <summary>
            Gets or sets the adult classification score.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.IsImageAdultClassified">
            <summary>
            Gets or sets indicates if an image is classified as adult.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.RacyClassificationScore">
            <summary>
            Gets or sets the racy classication score.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.IsImageRacyClassified">
            <summary>
            Gets or sets indicates if the image is classified as racy.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.AdvancedInfo">
            <summary>
            Gets or sets the advanced info.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Evaluate.Status">
            <summary>
            Gets or sets the evaluate status
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Face">
            <summary>
            Coordinates to the found face.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Face.#ctor">
            <summary>
            Initializes a new instance of the Face class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Face.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the Face class.
            </summary>
            <param name="bottom">The bottom coordinate.</param>
            <param name="left">The left coordinate.</param>
            <param name="right">The right coordinate.</param>
            <param name="top">The top coordinate.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Face.Bottom">
            <summary>
            Gets or sets the bottom coordinate.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Face.Left">
            <summary>
            Gets or sets the left coordinate.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Face.Right">
            <summary>
            Gets or sets the right coordinate.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Face.Top">
            <summary>
            Gets or sets the top coordinate.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces">
            <summary>
            Request object the contains found faces.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.#ctor">
            <summary>
            Initializes a new instance of the FoundFaces class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.#ctor(Microsoft.CognitiveServices.ContentModerator.Models.Status,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Face})">
            <summary>
            Initializes a new instance of the FoundFaces class.
            </summary>
            <param name="status">The evaluate status</param>
            <param name="trackingId">The tracking id.</param>
            <param name="cacheId">The cache id.</param>
            <param name="result">True if result was found.</param>
            <param name="count">Number of faces found.</param>
            <param name="advancedInfo">The advanced info.</param>
            <param name="faces">The list of faces.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.Status">
            <summary>
            Gets or sets the evaluate status
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.TrackingId">
            <summary>
            Gets or sets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.CacheId">
            <summary>
            Gets or sets the cache id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.Result">
            <summary>
            Gets or sets true if result was found.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.Count">
            <summary>
            Gets or sets number of faces found.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.AdvancedInfo">
            <summary>
            Gets or sets the advanced info.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.FoundFaces.Faces">
            <summary>
            Gets or sets the list of faces.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Frame">
            <summary>
            Video frame property details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Frame.#ctor">
            <summary>
            Initializes a new instance of the Frame class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Frame.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Tag})">
            <summary>
            Initializes a new instance of the Frame class.
            </summary>
            <param name="timestamp">Timestamp of the frame.</param>
            <param name="frameImage">Frame image.</param>
            <param name="metadata">Array of KeyValue.</param>
            <param name="reviewerResultTags">Reviewer result tags.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Frame.Timestamp">
            <summary>
            Gets or sets timestamp of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Frame.FrameImage">
            <summary>
            Gets or sets frame image.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Frame.Metadata">
            <summary>
            Gets or sets array of KeyValue.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Frame.ReviewerResultTags">
            <summary>
            Gets or sets reviewer result tags.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Frames">
            <summary>
            The response for a Get Frames request.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Frames.#ctor">
            <summary>
            Initializes a new instance of the Frames class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Frames.#ctor(System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Frame})">
            <summary>
            Initializes a new instance of the Frames class.
            </summary>
            <param name="reviewId">Id of the review.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Frames.ReviewId">
            <summary>
            Gets or sets id of the review.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Frames.VideoFrames">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Image">
            <summary>
            Image Properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Image.#ctor">
            <summary>
            Initializes a new instance of the Image class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Image.#ctor(System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.ImageAdditionalInfoItem},Microsoft.CognitiveServices.ContentModerator.Models.Status,System.String)">
            <summary>
            Initializes a new instance of the Image class.
            </summary>
            <param name="contentId">Content Id.</param>
            <param name="additionalInfo">Advanced info list.</param>
            <param name="status">Status details.</param>
            <param name="trackingId">Tracking Id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Image.ContentId">
            <summary>
            Gets or sets content Id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Image.AdditionalInfo">
            <summary>
            Gets or sets advanced info list.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Image.Status">
            <summary>
            Gets or sets status details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Image.TrackingId">
            <summary>
            Gets or sets tracking Id.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ImageAdditionalInfoItem.#ctor">
            <summary>
            Initializes a new instance of the ImageAdditionalInfoItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ImageAdditionalInfoItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ImageAdditionalInfoItem class.
            </summary>
            <param name="key">Key parameter.</param>
            <param name="value">Value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageAdditionalInfoItem.Key">
            <summary>
            Gets or sets key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageAdditionalInfoItem.Value">
            <summary>
            Gets or sets value parameter.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds">
            <summary>
            Image Id properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds.#ctor">
            <summary>
            Initializes a new instance of the ImageIds class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds.#ctor(System.String,System.Collections.Generic.IList{System.Nullable{System.Int32}},Microsoft.CognitiveServices.ContentModerator.Models.Status,System.String)">
            <summary>
            Initializes a new instance of the ImageIds class.
            </summary>
            <param name="contentSource">Source of the content.</param>
            <param name="contentIds">Id of the contents.</param>
            <param name="status">Get Image status.</param>
            <param name="trackingId">Tracking Id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds.ContentSource">
            <summary>
            Gets or sets source of the content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds.ContentIds">
            <summary>
            Gets or sets id of the contents.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds.Status">
            <summary>
            Gets or sets get Image status.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageIds.TrackingId">
            <summary>
            Gets or sets tracking Id.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.ImageList">
            <summary>
            Image List Properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ImageList.#ctor">
            <summary>
            Initializes a new instance of the ImageList class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.ImageList.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the ImageList class.
            </summary>
            <param name="id">Image List Id.</param>
            <param name="name">Image List Name.</param>
            <param name="description">Description for image list.</param>
            <param name="metadata">Image List Metadata.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageList.Id">
            <summary>
            Gets or sets image List Id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageList.Name">
            <summary>
            Gets or sets image List Name.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageList.Description">
            <summary>
            Gets or sets description for image list.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.ImageList.Metadata">
            <summary>
            Gets or sets image List Metadata.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.IPA">
            <summary>
            IP Address details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.IPA.#ctor">
            <summary>
            Initializes a new instance of the IPA class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.IPA.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the IPA class.
            </summary>
            <param name="subType">Subtype of the detected IP Address.</param>
            <param name="text">Detected IP Address.</param>
            <param name="index">Index(Location) of the IP Address in the input
            text content.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.IPA.SubType">
            <summary>
            Gets or sets subtype of the detected IP Address.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.IPA.Text">
            <summary>
            Gets or sets detected IP Address.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.IPA.Index">
            <summary>
            Gets or sets index(Location) of the IP Address in the input text
            content.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Job">
            <summary>
            The Job object.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Job.#ctor">
            <summary>
            Initializes a new instance of the Job class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Job.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.JobExecutionReportDetails})">
            <summary>
            Initializes a new instance of the Job class.
            </summary>
            <param name="id">The job id.</param>
            <param name="teamName">The team name associated with the
            job.</param>
            <param name="status">The status string (&lt;Pending, Failed,
            Completed&gt;).</param>
            <param name="workflowId">The Id of the workflow.</param>
            <param name="type">Type of the content.</param>
            <param name="callBackEndpoint">The callback endpoint.</param>
            <param name="reviewId">Review Id if one is created.</param>
            <param name="resultMetaData">Array of KeyValue pairs.</param>
            <param name="jobExecutionReport">Job execution report- Array of
            KeyValue pairs object.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.Id">
            <summary>
            Gets or sets the job id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.TeamName">
            <summary>
            Gets or sets the team name associated with the job.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.Status">
            <summary>
            Gets or sets the status string (&amp;lt;Pending, Failed,
            Completed&amp;gt;).
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.WorkflowId">
            <summary>
            Gets or sets the Id of the workflow.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.Type">
            <summary>
            Gets or sets type of the content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.CallBackEndpoint">
            <summary>
            Gets or sets the callback endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.ReviewId">
            <summary>
            Gets or sets review Id if one is created.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.ResultMetaData">
            <summary>
            Gets or sets array of KeyValue pairs.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Job.JobExecutionReport">
            <summary>
            Gets or sets job execution report- Array of KeyValue pairs object.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.JobExecutionReportDetails">
            <summary>
            Job Execution Report Values.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.JobExecutionReportDetails.#ctor">
            <summary>
            Initializes a new instance of the JobExecutionReportDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.JobExecutionReportDetails.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobExecutionReportDetails class.
            </summary>
            <param name="ts">Time details.</param>
            <param name="msg">Message details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.JobExecutionReportDetails.Ts">
            <summary>
            Gets or sets time details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.JobExecutionReportDetails.Msg">
            <summary>
            Gets or sets message details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.JobId.#ctor">
            <summary>
            Initializes a new instance of the JobId class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.JobId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JobId class.
            </summary>
            <param name="jobIdProperty">Id of the created job.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.JobId.JobIdProperty">
            <summary>
            Gets or sets id of the created job.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.JobListResult">
            <summary>
            The list of job ids.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.JobListResult.#ctor">
            <summary>
            Initializes a new instance of the JobListResult class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.JobListResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the JobListResult class.
            </summary>
            <param name="value">The job id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.JobListResult.Value">
            <summary>
            Gets or sets the job id.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair">
            <summary>
            The key value pair object properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair.#ctor">
            <summary>
            Initializes a new instance of the KeyValuePair class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyValuePair class.
            </summary>
            <param name="key">The key parameter.</param>
            <param name="value">The value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair.Key">
            <summary>
            Gets or sets the key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair.Value">
            <summary>
            Gets or sets the value parameter.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Match">
            <summary>
            The match details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Match.#ctor">
            <summary>
            Initializes a new instance of the Match class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Match.#ctor(System.Nullable{System.Double},System.Nullable{System.Int32},System.String,System.Collections.Generic.IList{System.Nullable{System.Int32}},System.String)">
            <summary>
            Initializes a new instance of the Match class.
            </summary>
            <param name="score">Confidence score of the image match.</param>
            <param name="matchId">The match id.</param>
            <param name="source">The source.</param>
            <param name="tags">The tags for match details.</param>
            <param name="label">The label.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Match.Score">
            <summary>
            Gets or sets confidence score of the image match.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Match.MatchId">
            <summary>
            Gets or sets the match id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Match.Source">
            <summary>
            Gets or sets the source.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Match.Tags">
            <summary>
            Gets or sets the tags for match details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Match.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse">
            <summary>
            The response for a Match request.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.#ctor">
            <summary>
            Initializes a new instance of the MatchResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Match},Microsoft.CognitiveServices.ContentModerator.Models.Status)">
            <summary>
            Initializes a new instance of the MatchResponse class.
            </summary>
            <param name="trackingId">The tracking id.</param>
            <param name="cacheID">The cache id.</param>
            <param name="isMatch">Indicates if there is a match.</param>
            <param name="matches">The match details.</param>
            <param name="status">The evaluate status</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.TrackingId">
            <summary>
            Gets or sets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.CacheID">
            <summary>
            Gets or sets the cache id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.IsMatch">
            <summary>
            Gets or sets indicates if there is a match.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.Matches">
            <summary>
            Gets or sets the match details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.MatchResponse.Status">
            <summary>
            Gets or sets the evaluate status
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.OCR">
            <summary>
            Contains the text found in image for the language specified.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.OCR.#ctor">
            <summary>
            Initializes a new instance of the OCR class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.OCR.#ctor(Microsoft.CognitiveServices.ContentModerator.Models.Status,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Candidate})">
            <summary>
            Initializes a new instance of the OCR class.
            </summary>
            <param name="status">The evaluate status</param>
            <param name="metadata">Array of KeyValue.</param>
            <param name="trackingId">The tracking id.</param>
            <param name="cacheId">The cache id.</param>
            <param name="language">The ISO 639-3 code.</param>
            <param name="text">The found text.</param>
            <param name="candidates">The list of candidate text.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.Status">
            <summary>
            Gets or sets the evaluate status
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.Metadata">
            <summary>
            Gets or sets array of KeyValue.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.TrackingId">
            <summary>
            Gets or sets the tracking id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.CacheId">
            <summary>
            Gets or sets the cache id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.Language">
            <summary>
            Gets or sets the ISO 639-3 code.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.Text">
            <summary>
            Gets or sets the found text.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.OCR.Candidates">
            <summary>
            Gets or sets the list of candidate text.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Phone">
            <summary>
            Phone Property details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Phone.#ctor">
            <summary>
            Initializes a new instance of the Phone class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Phone.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the Phone class.
            </summary>
            <param name="countryCode">CountryCode of the detected Phone
            number.</param>
            <param name="text">Detected Phone number.</param>
            <param name="index">Index(Location) of the Phone number in the
            input text content.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Phone.CountryCode">
            <summary>
            Gets or sets countryCode of the detected Phone number.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Phone.Text">
            <summary>
            Gets or sets detected Phone number.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Phone.Index">
            <summary>
            Gets or sets index(Location) of the Phone number in the input text
            content.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.PII">
            <summary>
            Personal Identifier Information details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.PII.#ctor">
            <summary>
            Initializes a new instance of the PII class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.PII.#ctor(System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Email},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.SSN},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.IPA},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Phone},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.Address})">
            <summary>
            Initializes a new instance of the PII class.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.PII.Email">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.PII.SSN">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.PII.IPA">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.PII.Phone">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.PII.Address">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex">
            <summary>
            Refresh Index Response.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.#ctor">
            <summary>
            Initializes a new instance of the RefreshIndex class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.#ctor(System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.String}},Microsoft.CognitiveServices.ContentModerator.Models.Status,System.String)">
            <summary>
            Initializes a new instance of the RefreshIndex class.
            </summary>
            <param name="contentSourceId">Content source Id.</param>
            <param name="isUpdateSuccess">Update success status.</param>
            <param name="advancedInfo">Advanced info list.</param>
            <param name="status">Refresh index status.</param>
            <param name="trackingId">Tracking Id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.ContentSourceId">
            <summary>
            Gets or sets content source Id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.IsUpdateSuccess">
            <summary>
            Gets or sets update success status.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.AdvancedInfo">
            <summary>
            Gets or sets advanced info list.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.Status">
            <summary>
            Gets or sets refresh index status.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.RefreshIndex.TrackingId">
            <summary>
            Gets or sets tracking Id.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Review">
            <summary>
            The Review object.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Review.#ctor">
            <summary>
            Initializes a new instance of the Review class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Review.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.KeyValuePair},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Review class.
            </summary>
            <param name="reviewId">Id of the review.</param>
            <param name="subTeam">Name of the subteam.</param>
            <param name="status">The status string (&lt;Pending,
            Complete&gt;).</param>
            <param name="reviewerResultTags">Array of KeyValue with Reviewer
            set Tags.</param>
            <param name="createdBy">The reviewer name.</param>
            <param name="metadata">Array of KeyValue.</param>
            <param name="type">The type of content.</param>
            <param name="content">The content value.</param>
            <param name="contentId">Id of the content.</param>
            <param name="callbackEndpoint">The callback endpoint.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.ReviewId">
            <summary>
            Gets or sets id of the review.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.SubTeam">
            <summary>
            Gets or sets name of the subteam.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.Status">
            <summary>
            Gets or sets the status string (&amp;lt;Pending, Complete&amp;gt;).
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.ReviewerResultTags">
            <summary>
            Gets or sets array of KeyValue with Reviewer set Tags.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.CreatedBy">
            <summary>
            Gets or sets the reviewer name.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.Metadata">
            <summary>
            Gets or sets array of KeyValue.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.Type">
            <summary>
            Gets or sets the type of content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.Content">
            <summary>
            Gets or sets the content value.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.ContentId">
            <summary>
            Gets or sets id of the content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Review.CallbackEndpoint">
            <summary>
            Gets or sets the callback endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Screen">
            <summary>
            The response for a Screen text request.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Screen.#ctor">
            <summary>
            Initializes a new instance of the Screen class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Screen.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.CognitiveServices.ContentModerator.Models.Classification,Microsoft.CognitiveServices.ContentModerator.Models.Status,Microsoft.CognitiveServices.ContentModerator.Models.PII,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.DetectedTerms},System.String)">
            <summary>
            Initializes a new instance of the Screen class.
            </summary>
            <param name="originalText">The original text.</param>
            <param name="normalizedText">The normalized text.</param>
            <param name="autoCorrectedText">The autocorrected text</param>
            <param name="misrepresentation">The misrepresentation text.</param>
            <param name="classification">The classification details of the
            text.</param>
            <param name="status">The evaluate status.</param>
            <param name="pII">Personal Identifier Information details.</param>
            <param name="language">Language of the input text content.</param>
            <param name="trackingId">Unique Content Moderator transaction
            Id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.OriginalText">
            <summary>
            Gets or sets the original text.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.NormalizedText">
            <summary>
            Gets or sets the normalized text.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.AutoCorrectedText">
            <summary>
            Gets or sets the autocorrected text
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.Misrepresentation">
            <summary>
            Gets or sets the misrepresentation text.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.Classification">
            <summary>
            Gets or sets the classification details of the text.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.Status">
            <summary>
            Gets or sets the evaluate status.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.PII">
            <summary>
            Gets or sets personal Identifier Information details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.Language">
            <summary>
            Gets or sets language of the input text content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.Terms">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Screen.TrackingId">
            <summary>
            Gets or sets unique Content Moderator transaction Id.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.SSN">
            <summary>
            Detected SSN details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.SSN.#ctor">
            <summary>
            Initializes a new instance of the SSN class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.SSN.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the SSN class.
            </summary>
            <param name="text">Detected SSN in the input text content.</param>
            <param name="index">Index(Location) of the SSN in the input text
            content.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.SSN.Text">
            <summary>
            Gets or sets detected SSN in the input text content.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.SSN.Index">
            <summary>
            Gets or sets index(Location) of the SSN in the input text content.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Status">
            <summary>
            Status properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Status.#ctor">
            <summary>
            Initializes a new instance of the Status class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Status.#ctor(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the Status class.
            </summary>
            <param name="code">Status code.</param>
            <param name="description">Status description.</param>
            <param name="exception">Exception status.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Status.Code">
            <summary>
            Gets or sets status code.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Status.Description">
            <summary>
            Gets or sets status description.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Status.Exception">
            <summary>
            Gets or sets exception status.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Tag">
            <summary>
            Tag details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Tag.#ctor">
            <summary>
            Initializes a new instance of the Tag class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Tag.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Tag class.
            </summary>
            <param name="key">The key parameter.</param>
            <param name="value">The value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Tag.Key">
            <summary>
            Gets or sets the key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Tag.Value">
            <summary>
            Gets or sets the value parameter.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.TermList">
            <summary>
            Term List  Properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermList.#ctor">
            <summary>
            Initializes a new instance of the TermList class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermList.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TermList class.
            </summary>
            <param name="id">Term list Id.</param>
            <param name="name">Term list name.</param>
            <param name="description">Description for term list.</param>
            <param name="metadata">Term list metadata.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermList.Id">
            <summary>
            Gets or sets term list Id.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermList.Name">
            <summary>
            Gets or sets term list name.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermList.Description">
            <summary>
            Gets or sets description for term list.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermList.Metadata">
            <summary>
            Gets or sets term list metadata.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.Terms">
            <summary>
            Terms properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Terms.#ctor">
            <summary>
            Initializes a new instance of the Terms class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.Terms.#ctor(Microsoft.CognitiveServices.ContentModerator.Models.TermsData,Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging)">
            <summary>
            Initializes a new instance of the Terms class.
            </summary>
            <param name="data">Term data details.</param>
            <param name="paging">Paging details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Terms.Data">
            <summary>
            Gets or sets term data details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.Terms.Paging">
            <summary>
            Gets or sets paging details.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.TermsData">
            <summary>
            All term Id response properties.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermsData.#ctor">
            <summary>
            Initializes a new instance of the TermsData class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermsData.#ctor(System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.TermsInList},Microsoft.CognitiveServices.ContentModerator.Models.Status,System.String)">
            <summary>
            Initializes a new instance of the TermsData class.
            </summary>
            <param name="language">Language of the terms.</param>
            <param name="terms">List of terms.</param>
            <param name="status">Term Status.</param>
            <param name="trackingId">Tracking Id.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsData.Language">
            <summary>
            Gets or sets language of the terms.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsData.Terms">
            <summary>
            Gets or sets list of terms.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsData.Status">
            <summary>
            Gets or sets term Status.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsData.TrackingId">
            <summary>
            Gets or sets tracking Id.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.TermsInList">
            <summary>
            Terms in list Id passed.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermsInList.#ctor">
            <summary>
            Initializes a new instance of the TermsInList class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermsInList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TermsInList class.
            </summary>
            <param name="term">Added term details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsInList.Term">
            <summary>
            Gets or sets added term details.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging">
            <summary>
            Paging details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging.#ctor">
            <summary>
            Initializes a new instance of the TermsPaging class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the TermsPaging class.
            </summary>
            <param name="total">Total details.</param>
            <param name="limit">Limit details.</param>
            <param name="offset">Offset details.</param>
            <param name="returned">Returned text details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging.Total">
            <summary>
            Gets or sets total details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging.Limit">
            <summary>
            Gets or sets limit details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging.Offset">
            <summary>
            Gets or sets offset details.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TermsPaging.Returned">
            <summary>
            Gets or sets returned text details.
            </summary>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem">
            <summary>
            Schema items of the body.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem.#ctor">
            <summary>
            Initializes a new instance of the TranscriptModerationBodyItem
            class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem.#ctor(System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItemTermsItem})">
            <summary>
            Initializes a new instance of the TranscriptModerationBodyItem
            class.
            </summary>
            <param name="timestamp">Timestamp of the image.</param>
            <param name="terms">Optional metadata details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem.Timestamp">
            <summary>
            Gets or sets timestamp of the image.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem.Terms">
            <summary>
            Gets or sets optional metadata details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItemTermsItem.#ctor">
            <summary>
            Initializes a new instance of the
            TranscriptModerationBodyItemTermsItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItemTermsItem.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the
            TranscriptModerationBodyItemTermsItem class.
            </summary>
            <param name="index">Index of the word</param>
            <param name="term">Detected word.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItemTermsItem.Index">
            <summary>
            Gets or sets index of the word
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItemTermsItem.Term">
            <summary>
            Gets or sets detected word.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItemTermsItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem">
            <summary>
            Schema items of the body.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.#ctor">
            <summary>
            Initializes a new instance of the VideoFrameBodyItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemReviewerResultTagsItem},System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemMetadataItem})">
            <summary>
            Initializes a new instance of the VideoFrameBodyItem class.
            </summary>
            <param name="timestamp">Timestamp of the frame.</param>
            <param name="frameImage">Content to review.</param>
            <param name="metadata">Optional metadata details.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.Timestamp">
            <summary>
            Gets or sets timestamp of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.FrameImage">
            <summary>
            Gets or sets content to review.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.ReviewerResultTags">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.Metadata">
            <summary>
            Gets or sets optional metadata details.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemMetadataItem.#ctor">
            <summary>
            Initializes a new instance of the VideoFrameBodyItemMetadataItem
            class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemMetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the VideoFrameBodyItemMetadataItem
            class.
            </summary>
            <param name="key">Your key parameter.</param>
            <param name="value">Your value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemMetadataItem.Key">
            <summary>
            Gets or sets your key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemMetadataItem.Value">
            <summary>
            Gets or sets your value parameter.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemMetadataItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemReviewerResultTagsItem.#ctor">
            <summary>
            Initializes a new instance of the
            VideoFrameBodyItemReviewerResultTagsItem class.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemReviewerResultTagsItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            VideoFrameBodyItemReviewerResultTagsItem class.
            </summary>
            <param name="key">Your key parameter.</param>
            <param name="value">Your value parameter.</param>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemReviewerResultTagsItem.Key">
            <summary>
            Gets or sets your key parameter.
            </summary>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemReviewerResultTagsItem.Value">
            <summary>
            Gets or sets your value parameter.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItemReviewerResultTagsItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.Reviews">
            <summary>
            Reviews operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the Reviews class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.Reviews.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.GetReviewWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns review details for the review Id passed.
            </summary>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.GetJobDetailsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the Job Details for a Job Id.
            </summary>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='jobId'>
            Id of the job.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.CreateReviewsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='urlContentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createReviewBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.CreateJobWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Content,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             A job Id will be returned for the content posted on this endpoint.
            
             Once the content is evaluated against the Workflow provided the review will
             be created or ignored based on the workflow expression.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
            
             &lt;p&gt;
             &lt;h4&gt;Job Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {&lt;br/&gt;
             "JobId": "&lt;Job Id&gt;,&lt;br/&gt;
             "ReviewId": "&lt;Review Id, if the Job resulted in a Review to be
             created&gt;",&lt;br/&gt;
             "WorkFlowId": "default",&lt;br/&gt;
             "Status": "&lt;This will be one of Complete, InProgress,
             Error&gt;",&lt;br/&gt;
             "ContentType": "Image",&lt;br/&gt;
             "ContentId": "&lt;This is the ContentId that was specified on
             input&gt;",&lt;br/&gt;
             "CallBackType": "Job",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;
             &lt;p&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='contentType'>
             Image, Text or Video. Possible values include: 'Image', 'Text', 'Video'
             </param>
             <param name='contentId'>
             Id/Name to identify the content submitted.
             </param>
             <param name='workflowName'>
             Workflow Name that you want to invoke.
             </param>
             <param name='jobContentType'>
             The content type. Possible values include: 'application/json', 'image/jpeg'
             </param>
             <param name='content'>
             Content to evaluate.
             </param>
             <param name='callBackEndpoint'>
             Callback endpoint for posting the create job result.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.AddVideoFrameWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='timescale'>
             Timescale of the video you are adding frames to.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.GetVideoFramesWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='startSeed'>
             Time stamp of the frame from where you want to start fetching the frames.
             </param>
             <param name='noOfRecords'>
             Number of frames to fetch.
             </param>
             <param name='filter'>
             Get frames filtered by tags.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.PublishVideoReviewWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Publish video review to make it available for review.
            </summary>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.AddVideoTranscriptModerationResultWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This API adds a transcript screen text result file for a video review.
            Transcript screen text result file is a result of Screen Text API . In
            order to generate transcript screen text result file , a transcript file
            has to be screened for profanity using Screen Text API.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='transcriptModerationBody'>
            Body for add video transcript moderation result API
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.AddVideoTranscriptWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This API adds a transcript file (text version of all the words spoken in a
            video) to a video review. The file should be a valid WebVTT format.
            </summary>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='vTTfile'>
            Transcript file of the video.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.CreateVideoReviewsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='contentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createVideoReviewsBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.AddVideoFrameUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Use this method to add frames for a video review.Timescale: This parameter
            is a factor which is used to convert the timestamp on a frame into
            milliseconds. Timescale is provided in the output of the Content Moderator
            video media processor on the Azure Media Services platform.Timescale in the
            Video Moderation output is Ticks/Second.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='videoFrameBody'>
            Body for add video frames API
            </param>
            <param name='timescale'>
            Timescale of the video.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.Reviews.AddVideoFrameStreamWithHttpMessagesAsync(System.String,System.String,System.String,System.IO.Stream,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Use this method to add frames for a video review.Timescale: This parameter
            is a factor which is used to convert the timestamp on a frame into
            milliseconds. Timescale is provided in the output of the Content Moderator
            video media processor on the Azure Media Services platform.Timescale in the
            Video Moderation output is Ticks/Second.
            </summary>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='frameImageZip'>
            Zip file containing frame images.
            </param>
            <param name='frameMetadata'>
            Metadata of the frame.
            </param>
            <param name='timescale'>
            Timescale of the video .
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions">
            <summary>
            Extension methods for Reviews.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.GetReview(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String)">
            <summary>
            Returns review details for the review Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.GetReviewAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns review details for the review Id passed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.GetJobDetails(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String)">
            <summary>
            Get the Job Details for a Job Id.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='jobId'>
            Id of the job.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.GetJobDetailsAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the Job Details for a Job Id.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your Team Name.
            </param>
            <param name='jobId'>
            Id of the job.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.CreateReviews(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem},System.String)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='urlContentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createReviewBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.CreateReviewsAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateReviewBodyItem},System.String,System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='urlContentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createReviewBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.CreateJob(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Content,System.String)">
             <summary>
             A job Id will be returned for the content posted on this endpoint.
            
             Once the content is evaluated against the Workflow provided the review will
             be created or ignored based on the workflow expression.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
            
             &lt;p&gt;
             &lt;h4&gt;Job Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {&lt;br/&gt;
             "JobId": "&lt;Job Id&gt;,&lt;br/&gt;
             "ReviewId": "&lt;Review Id, if the Job resulted in a Review to be
             created&gt;",&lt;br/&gt;
             "WorkFlowId": "default",&lt;br/&gt;
             "Status": "&lt;This will be one of Complete, InProgress,
             Error&gt;",&lt;br/&gt;
             "ContentType": "Image",&lt;br/&gt;
             "ContentId": "&lt;This is the ContentId that was specified on
             input&gt;",&lt;br/&gt;
             "CallBackType": "Job",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;
             &lt;p&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='contentType'>
             Image, Text or Video. Possible values include: 'Image', 'Text', 'Video'
             </param>
             <param name='contentId'>
             Id/Name to identify the content submitted.
             </param>
             <param name='workflowName'>
             Workflow Name that you want to invoke.
             </param>
             <param name='jobContentType'>
             The content type. Possible values include: 'application/json', 'image/jpeg'
             </param>
             <param name='content'>
             Content to evaluate.
             </param>
             <param name='callBackEndpoint'>
             Callback endpoint for posting the create job result.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.CreateJobAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.String,System.String,Microsoft.CognitiveServices.ContentModerator.Models.Content,System.String,System.Threading.CancellationToken)">
             <summary>
             A job Id will be returned for the content posted on this endpoint.
            
             Once the content is evaluated against the Workflow provided the review will
             be created or ignored based on the workflow expression.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
            
             &lt;p&gt;
             &lt;h4&gt;Job Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {&lt;br/&gt;
             "JobId": "&lt;Job Id&gt;,&lt;br/&gt;
             "ReviewId": "&lt;Review Id, if the Job resulted in a Review to be
             created&gt;",&lt;br/&gt;
             "WorkFlowId": "default",&lt;br/&gt;
             "Status": "&lt;This will be one of Complete, InProgress,
             Error&gt;",&lt;br/&gt;
             "ContentType": "Image",&lt;br/&gt;
             "ContentId": "&lt;This is the ContentId that was specified on
             input&gt;",&lt;br/&gt;
             "CallBackType": "Job",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;
             &lt;p&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;
            
             {
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='contentType'>
             Image, Text or Video. Possible values include: 'Image', 'Text', 'Video'
             </param>
             <param name='contentId'>
             Id/Name to identify the content submitted.
             </param>
             <param name='workflowName'>
             Workflow Name that you want to invoke.
             </param>
             <param name='jobContentType'>
             The content type. Possible values include: 'application/json', 'image/jpeg'
             </param>
             <param name='content'>
             Content to evaluate.
             </param>
             <param name='callBackEndpoint'>
             Callback endpoint for posting the create job result.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoFrame(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Nullable{System.Int32})">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='timescale'>
             Timescale of the video you are adding frames to.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoFrameAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='timescale'>
             Timescale of the video you are adding frames to.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.GetVideoFrames(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='startSeed'>
             Time stamp of the frame from where you want to start fetching the frames.
             </param>
             <param name='noOfRecords'>
             Number of frames to fetch.
             </param>
             <param name='filter'>
             Get frames filtered by tags.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.GetVideoFramesAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='reviewId'>
             Id of the review.
             </param>
             <param name='startSeed'>
             Time stamp of the frame from where you want to start fetching the frames.
             </param>
             <param name='noOfRecords'>
             Number of frames to fetch.
             </param>
             <param name='filter'>
             Get frames filtered by tags.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.PublishVideoReview(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String)">
            <summary>
            Publish video review to make it available for review.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.PublishVideoReviewAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Publish video review to make it available for review.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoTranscriptModerationResult(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem})">
            <summary>
            This API adds a transcript screen text result file for a video review.
            Transcript screen text result file is a result of Screen Text API . In
            order to generate transcript screen text result file , a transcript file
            has to be screened for profanity using Screen Text API.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='transcriptModerationBody'>
            Body for add video transcript moderation result API
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoTranscriptModerationResultAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.TranscriptModerationBodyItem},System.Threading.CancellationToken)">
            <summary>
            This API adds a transcript screen text result file for a video review.
            Transcript screen text result file is a result of Screen Text API . In
            order to generate transcript screen text result file , a transcript file
            has to be screened for profanity using Screen Text API.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='transcriptModerationBody'>
            Body for add video transcript moderation result API
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoTranscript(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.IO.Stream)">
            <summary>
            This API adds a transcript file (text version of all the words spoken in a
            video) to a video review. The file should be a valid WebVTT format.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='vTTfile'>
            Transcript file of the video.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoTranscriptAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            This API adds a transcript file (text version of all the words spoken in a
            video) to a video review. The file should be a valid WebVTT format.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='vTTfile'>
            Transcript file of the video.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.CreateVideoReviews(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem},System.String)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createVideoReviewsBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.CreateVideoReviewsAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.CreateVideoReviewsBodyItem},System.String,System.Threading.CancellationToken)">
             <summary>
             The reviews created would show up for Reviewers on your team. As Reviewers
             complete reviewing, results of the Review would be POSTED (i.e. HTTP POST)
             on the specified CallBackEndpoint.
            
             &lt;h3&gt;CallBack Schemas &lt;/h3&gt;
             &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;
             &lt;p&gt;
             {&lt;br/&gt;
             "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;
             "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;
             "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;
             "CallBackType": "Review",&lt;br/&gt;
             "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;
             "Metadata": {&lt;br/&gt;
             "adultscore": "0.xxx",&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "racyscore": "0.xxx",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             },&lt;br/&gt;
             "ReviewerResultTags": {&lt;br/&gt;
             "a": "False",&lt;br/&gt;
             "r": "True"&lt;br/&gt;
             }&lt;br/&gt;
             }&lt;br/&gt;
            
             &lt;/p&gt;.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='contentType'>
             The content type.
             </param>
             <param name='teamName'>
             Your team name.
             </param>
             <param name='createVideoReviewsBody'>
             Body for create reviews API
             </param>
             <param name='subTeam'>
             SubTeam of your team, you want to assign the created review to.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoFrameUrl(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem},System.Nullable{System.Int32})">
            <summary>
            Use this method to add frames for a video review.Timescale: This parameter
            is a factor which is used to convert the timestamp on a frame into
            milliseconds. Timescale is provided in the output of the Content Moderator
            video media processor on the Azure Media Services platform.Timescale in the
            Video Moderation output is Ticks/Second.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='videoFrameBody'>
            Body for add video frames API
            </param>
            <param name='timescale'>
            Timescale of the video.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoFrameUrlAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.CognitiveServices.ContentModerator.Models.VideoFrameBodyItem},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Use this method to add frames for a video review.Timescale: This parameter
            is a factor which is used to convert the timestamp on a frame into
            milliseconds. Timescale is provided in the output of the Content Moderator
            video media processor on the Azure Media Services platform.Timescale in the
            Video Moderation output is Ticks/Second.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='videoFrameBody'>
            Body for add video frames API
            </param>
            <param name='timescale'>
            Timescale of the video.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoFrameStream(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.IO.Stream,System.String,System.Nullable{System.Int32})">
            <summary>
            Use this method to add frames for a video review.Timescale: This parameter
            is a factor which is used to convert the timestamp on a frame into
            milliseconds. Timescale is provided in the output of the Content Moderator
            video media processor on the Azure Media Services platform.Timescale in the
            Video Moderation output is Ticks/Second.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='frameImageZip'>
            Zip file containing frame images.
            </param>
            <param name='frameMetadata'>
            Metadata of the frame.
            </param>
            <param name='timescale'>
            Timescale of the video .
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.ReviewsExtensions.AddVideoFrameStreamAsync(Microsoft.CognitiveServices.ContentModerator.IReviews,System.String,System.String,System.String,System.IO.Stream,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Use this method to add frames for a video review.Timescale: This parameter
            is a factor which is used to convert the timestamp on a frame into
            milliseconds. Timescale is provided in the output of the Content Moderator
            video media processor on the Azure Media Services platform.Timescale in the
            Video Moderation output is Ticks/Second.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='contentType'>
            The content type.
            </param>
            <param name='teamName'>
            Your team name.
            </param>
            <param name='reviewId'>
            Id of the review.
            </param>
            <param name='frameImageZip'>
            Zip file containing frame images.
            </param>
            <param name='frameMetadata'>
            Metadata of the frame.
            </param>
            <param name='timescale'>
            Timescale of the video .
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.TextModeration">
            <summary>
            TextModeration operations.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModeration.#ctor(Microsoft.CognitiveServices.ContentModerator.ContentModeratorClient)">
            <summary>
            Initializes a new instance of the TextModeration class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.CognitiveServices.ContentModerator.TextModeration.Client">
            <summary>
            Gets a reference to the ContentModeratorClient
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModeration.ScreenTextWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Detect profanity and match against custom and shared blacklists
            </summary>
            <remarks>
            Detects profanity in more than 100 languages and match against custom and
            shared blacklists.
            </remarks>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='language'>
            Language of the text.
            </param>
            <param name='autocorrect'>
            Autocorrect text.
            </param>
            <param name='pII'>
            Detect personal identifiable information.
            </param>
            <param name='listId'>
            The list Id.
            </param>
            <param name='classify'>
            Classify input.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModeration.DetectLanguageWithHttpMessagesAsync(System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This operation will detect the language of given input content. Returns the
            &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3
            code&lt;/a&gt; for the predominant language comprising the submitted text.
            Over 110 languages supported.
            </summary>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.CognitiveServices.ContentModerator.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.CognitiveServices.ContentModerator.TextModerationExtensions">
            <summary>
            Extension methods for TextModeration.
            </summary>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModerationExtensions.ScreenText(Microsoft.CognitiveServices.ContentModerator.ITextModeration,System.String,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})">
            <summary>
            Detect profanity and match against custom and shared blacklists
            </summary>
            <remarks>
            Detects profanity in more than 100 languages and match against custom and
            shared blacklists.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='language'>
            Language of the text.
            </param>
            <param name='autocorrect'>
            Autocorrect text.
            </param>
            <param name='pII'>
            Detect personal identifiable information.
            </param>
            <param name='listId'>
            The list Id.
            </param>
            <param name='classify'>
            Classify input.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModerationExtensions.ScreenTextAsync(Microsoft.CognitiveServices.ContentModerator.ITextModeration,System.String,System.IO.Stream,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Detect profanity and match against custom and shared blacklists
            </summary>
            <remarks>
            Detects profanity in more than 100 languages and match against custom and
            shared blacklists.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='language'>
            Language of the text.
            </param>
            <param name='autocorrect'>
            Autocorrect text.
            </param>
            <param name='pII'>
            Detect personal identifiable information.
            </param>
            <param name='listId'>
            The list Id.
            </param>
            <param name='classify'>
            Classify input.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModerationExtensions.DetectLanguage(Microsoft.CognitiveServices.ContentModerator.ITextModeration,System.String,System.IO.Stream)">
            <summary>
            This operation will detect the language of given input content. Returns the
            &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3
            code&lt;/a&gt; for the predominant language comprising the submitted text.
            Over 110 languages supported.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
        </member>
        <member name="M:Microsoft.CognitiveServices.ContentModerator.TextModerationExtensions.DetectLanguageAsync(Microsoft.CognitiveServices.ContentModerator.ITextModeration,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            This operation will detect the language of given input content. Returns the
            &lt;a href="http://www-01.sil.org/iso639-3/codes.asp"&gt;ISO 639-3
            code&lt;/a&gt; for the predominant language comprising the submitted text.
            Over 110 languages supported.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='textContentType'>
            The content type. Possible values include: 'text/plain', 'text/html',
            'text/xml', 'text/markdown'
            </param>
            <param name='textContent'>
            Content to screen.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
